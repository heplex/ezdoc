import{_ as o,W as p,X as l,$ as n,a0 as a,Z as t,a1 as e,C as i}from"./framework-b609eea8.js";const r="/assets/微服务-网关-a83e947d.png",c="/assets/image-20220808013732-bbf739a2.png",u="/assets/image-20220808013821-807bf653.png",g="/assets/image-20220808013839-a958c539.png",d={},h=e('<h2 id="何为网关-为什么要网关" tabindex="-1"><a class="header-anchor" href="#何为网关-为什么要网关" aria-hidden="true">#</a> 何为网关？为什么要网关？</h2><figure><img src="'+r+'" alt="微服务-网关" tabindex="0" loading="lazy"><figcaption>微服务-网关</figcaption></figure><p>微服务背景下，一个系统被拆分为多个服务，但是像安全认证，流量控制，日志，监控等功能是每个服务都需要的，没有网关的话，我们就需要在每个服务中单独实现，这使得我们做了很多重复的事情并且没有一个全局的视图来统一管理这些功能。</p><p>综上：<strong>一般情况下，网关都会提供请求转发、安全认证（身份/权限认证）、流量控制、负载均衡、容灾、日志、监控这些功能。</strong></p><p>上面介绍了这么多功能，实际上，网关主要做了一件事情：<strong>请求过滤</strong> 。</p><h2 id="有哪些常见的网关系统" tabindex="-1"><a class="header-anchor" href="#有哪些常见的网关系统" aria-hidden="true">#</a> 有哪些常见的网关系统？</h2><h3 id="netflix-zuul" tabindex="-1"><a class="header-anchor" href="#netflix-zuul" aria-hidden="true">#</a> Netflix Zuul</h3><p>Zuul 是 Netflix 开发的一款提供动态路由、监控、弹性、安全的网关服务。</p><p>Zuul 主要通过过滤器（类似于 AOP）来过滤请求，从而实现网关必备的各种功能。</p><figure><img src="'+c+'" alt="Zuul架构" tabindex="0" loading="lazy"><figcaption>Zuul架构</figcaption></figure>',10),k={href:"https://github.com/marcosbarbero/spring-cloud-zuul-ratelimit",target:"_blank",rel:"noopener noreferrer"},_=e(`<div class="language-xml line-numbers-mode" data-ext="xml"><pre class="language-xml"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-starter-netflix-zuul<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">&gt;</span></span>com.marcosbarbero.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">&gt;</span></span>spring-cloud-zuul-ratelimit<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">&gt;</span></span>
    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">&gt;</span></span>2.2.0.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Zuul 1.x 基于同步 IO，性能较差。Zuul 2.x 基于 Netty 实现了异步 IO，性能得到了大幅改进。</p>`,2),b={href:"https://github.com/Netflix/zuul",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/Netflix/zuul/wiki",target:"_blank",rel:"noopener noreferrer"},m=n("h3",{id:"spring-cloud-gateway",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#spring-cloud-gateway","aria-hidden":"true"},"#"),a(" Spring Cloud Gateway")],-1),v=n("p",null,"SpringCloud Gateway 属于 Spring Cloud 生态系统中的网关，其诞生的目标是为了替代老牌网关 **Zuul **。准确点来说，应该是 Zuul 1.x。SpringCloud Gateway 起步要比 Zuul 2.x 更早。",-1),x=n("p",null,"为了提升网关的性能，SpringCloud Gateway 基于 Spring WebFlux 。Spring WebFlux 使用 Reactor 库来实现响应式编程模型，底层基于 Netty 实现异步 IO。",-1),y=n("p",null,"Spring Cloud Gateway 的目标，不仅提供统一的路由方式，并且基于 Filter 链的方式提供了网关基本的功能，例如：安全，监控/指标，和限流。",-1),I=n("p",null,"Spring Cloud Gateway 和 Zuul 2.x 的差别不大，也是通过过滤器来处理请求。不过，目前更加推荐使用 Spring Cloud Gateway 而非 Zuul，Spring Cloud 生态对其支持更加友好。",-1),S={href:"https://github.com/spring-cloud/spring-cloud-gateway",target:"_blank",rel:"noopener noreferrer"},w={href:"https://spring.io/projects/spring-cloud-gateway",target:"_blank",rel:"noopener noreferrer"},z=n("h3",{id:"kong",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#kong","aria-hidden":"true"},"#"),a(" Kong")],-1),A={href:"https://github.com/openresty/",target:"_blank",rel:"noopener noreferrer"},N=e(`<blockquote><p>OpenResty 是一个基于 Nginx 与 Lua 的高性能 Web 平台，其内部集成了大量精良的 Lua 库、第三方模块以及大多数的依赖项。用于方便地搭建能够处理超高并发、扩展性极高的动态 Web 应用、Web 服务和动态网关。</p></blockquote><p>Kong 提供了插件机制来扩展其功能。比如、在服务上启用 Zipkin 插件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">curl</span> <span class="token parameter variable">-X</span> POST http://kong:8001/services/<span class="token punctuation">{</span>service<span class="token punctuation">}</span>/plugins <span class="token punctuation">\\</span>
    <span class="token parameter variable">--data</span> <span class="token string">&quot;name=zipkin&quot;</span>  <span class="token punctuation">\\</span>
    <span class="token parameter variable">--data</span> <span class="token string">&quot;config.http_endpoint=http://your.zipkin.collector:9411/api/v2/spans&quot;</span> <span class="token punctuation">\\</span>
    <span class="token parameter variable">--data</span> <span class="token string">&quot;config.sample_ratio=0.001&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,3),G={href:"https://github.com/Kong/kong",target:"_blank",rel:"noopener noreferrer"},P={href:"https://konghq.com/kong",target:"_blank",rel:"noopener noreferrer"},Z=e('<h3 id="apisix" tabindex="-1"><a class="header-anchor" href="#apisix" aria-hidden="true">#</a> APISIX</h3><p>APISIX 是一款基于 Nginx 和 etcd 的高性能、云原生、可扩展的网关系统。</p><blockquote><p><em>etcd</em>是使用 Go 语言开发的一个开源的、高可用的分布式 key-value 存储系统，使用 Raft 协议做分布式共识。</p></blockquote><p>与传统 API 网关相比，APISIX 具有动态路由和插件热加载，特别适合微服务系统下的 API 管理。并且，APISIX 与 SkyWalking（分布式链路追踪系统）、Zipkin（分布式链路追踪系统）、Prometheus（监控系统） 等 DevOps 生态工具对接都十分方便。</p><figure><img src="'+u+'" alt="apisix架构图" tabindex="0" loading="lazy"><figcaption>apisix架构图</figcaption></figure><p>作为 NGINX 和 Kong 的替代项目，APISIX 目前已经是 Apache 顶级开源项目，并且是最快毕业的国产开源项目。国内目前已经有很多知名企业（比如金山、有赞、爱奇艺、腾讯、贝壳）使用 APISIX 处理核心的业务流量。</p><p>根据官网介绍：“APISIX 已经生产可用，功能、性能、架构全面优于 Kong”。</p>',7),X={href:"https://github.com/apache/apisix",target:"_blank",rel:"noopener noreferrer"},q={href:"https://apisix.apache.org/zh/",target:"_blank",rel:"noopener noreferrer"},C=n("p",null,"相关阅读：",-1),W={href:"https://www.apiseven.com/zh/blog/why-we-need-Apache-APISIX",target:"_blank",rel:"noopener noreferrer"},K={href:"https://www.apiseven.com/zh/blog",target:"_blank",rel:"noopener noreferrer"},O={href:"https://www.apiseven.com/zh/usercases",target:"_blank",rel:"noopener noreferrer"},E=n("h3",{id:"shenyu",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#shenyu","aria-hidden":"true"},"#"),a(" Shenyu")],-1),L=n("p",null,"Shenyu 是一款基于 WebFlux 的可扩展、高性能、响应式网关，Apache 顶级开源项目。",-1),R=n("figure",null,[n("img",{src:g,alt:"Shenyu架构",tabindex:"0",loading:"lazy"}),n("figcaption",null,"Shenyu架构")],-1),F=n("p",null,"Shenyu 通过插件扩展功能，插件是 ShenYu 的灵魂，并且插件也是可扩展和热插拔的。不同的插件实现不同的功能。Shenyu 自带了诸如限流、熔断、转发 、重写、重定向、和路由监控等插件。",-1),V={href:"https://github.com/apache/incubator-shenyu",target:"_blank",rel:"noopener noreferrer"},B={href:"https://shenyu.apache.org/",target:"_blank",rel:"noopener noreferrer"};function j(T,$){const s=i("ExternalLinkIcon");return p(),l("div",null,[h,n("p",null,[a("我们可以自定义过滤器来处理请求，并且，Zuul 生态本身就有很多现成的过滤器供我们使用。就比如限流可以直接用国外朋友写的 "),n("a",k,[a("spring-cloud-zuul-ratelimit"),t(s)]),a(" (这里只是举例说明，一般是配合 hystrix 来做限流)：")]),_,n("ul",null,[n("li",null,[a("Github 地址 ： "),n("a",b,[a("https://github.com/Netflix/zuul"),t(s)])]),n("li",null,[a("官方 Wiki ： "),n("a",f,[a("https://github.com/Netflix/zuul/wiki"),t(s)])])]),m,v,x,y,I,n("ul",null,[n("li",null,[a("Github 地址 ： "),n("a",S,[a("https://github.com/spring-cloud/spring-cloud-gateway"),t(s)])]),n("li",null,[a("官网 ： "),n("a",w,[a("https://spring.io/projects/spring-cloud-gateway"),t(s)])])]),z,n("p",null,[a("Kong 是一款基于 "),n("a",A,[a("OpenResty"),t(s)]),a(" 的高性能、云原生、可扩展的网关系统。")]),N,n("ul",null,[n("li",null,[a("Github 地址： "),n("a",G,[a("https://github.com/Kong/kong"),t(s)])]),n("li",null,[a("官网地址 ： "),n("a",P,[a("https://konghq.com/kong"),t(s)])])]),Z,n("ul",null,[n("li",null,[a("Github 地址 ："),n("a",X,[a("https://github.com/apache/apisix"),t(s)])]),n("li",null,[a("官网地址： "),n("a",q,[a("https://apisix.apache.org/zh/"),t(s)])])]),C,n("ul",null,[n("li",null,[n("a",W,[a("有了 NGINX 和 Kong，为什么还需要 Apache APISIX"),t(s)])]),n("li",null,[n("a",K,[a("APISIX 技术博客"),t(s)])]),n("li",null,[n("a",O,[a("APISIX 用户案例"),t(s)])])]),E,L,R,F,n("ul",null,[n("li",null,[a("Github 地址： "),n("a",V,[a("https://github.com/apache/incubator-shenyu"),t(s)])]),n("li",null,[a("官网地址 ： "),n("a",B,[a("https://shenyu.apache.org/"),t(s)])])])])}const Y=o(d,[["render",j],["__file","api-gateway.html.vue"]]);export{Y as default};
