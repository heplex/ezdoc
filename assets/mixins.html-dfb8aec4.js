const t=JSON.parse('{"key":"v-0fe462c8","path":"/kb/frontend/basic/typescript/mixins.html","title":"混入(mixin)","lang":"zh-CN","frontmatter":{"description":"介绍 除了传统的面向对象继承方式，还流行一种通过可重用组件创建类的方式，就是联合另一个简单类的代码。 你可能在Scala等语言里对mixins及其特性已经很熟悉了，但它在JavaScript中也是很流行的。 混入示例 下面的代码演示了如何在TypeScript里使用混入。 后面我们还会解释这段代码是怎么工作的。 理解这个例子 代码里首先定义了两个类，它...","head":[["meta",{"property":"og:url","content":"https://doc.ezfri.com/kb/frontend/basic/typescript/mixins.html"}],["meta",{"property":"og:site_name","content":"轻松星期五"}],["meta",{"property":"og:title","content":"混入(mixin)"}],["meta",{"property":"og:description","content":"介绍 除了传统的面向对象继承方式，还流行一种通过可重用组件创建类的方式，就是联合另一个简单类的代码。 你可能在Scala等语言里对mixins及其特性已经很熟悉了，但它在JavaScript中也是很流行的。 混入示例 下面的代码演示了如何在TypeScript里使用混入。 后面我们还会解释这段代码是怎么工作的。 理解这个例子 代码里首先定义了两个类，它..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-05-17T08:50:44.000Z"}],["meta",{"property":"article:author","content":"轻松星期五"}],["meta",{"property":"article:modified_time","content":"2023-05-17T08:50:44.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"混入(mixin)\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-05-17T08:50:44.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"轻松星期五\\",\\"url\\":\\"https://doc.ezfri.com\\"}]}"]]},"headers":[{"level":2,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":2,"title":"混入示例","slug":"混入示例","link":"#混入示例","children":[]},{"level":2,"title":"理解这个例子","slug":"理解这个例子","link":"#理解这个例子","children":[]}],"git":{"createdTime":1684313444000,"updatedTime":1684313444000,"contributors":[{"name":"chun.zheng","email":"zcilive@gmail.com","commits":1}]},"readingTime":{"minutes":1.97,"words":590},"filePathRelative":"kb/frontend/basic/typescript/mixins.md","localizedDate":"2023年5月17日","autoDesc":true,"excerpt":""}');export{t as data};
