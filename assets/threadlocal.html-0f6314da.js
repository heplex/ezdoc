const e=JSON.parse('{"key":"v-52af946a","path":"/bakend/java/concurrent/threadlocal.html","title":"万字解析 ThreadLocal 关键字","lang":"zh-CN","frontmatter":{"title":"万字解析 ThreadLocal 关键字","category":"Java","tag":["Java并发"],"description":"前言 全文共 10000+字，31 张图，这篇文章同样耗费了不少的时间和精力才创作完成，原创不易，请大家点点关注+在看，感谢。 对于ThreadLocal，大家的第一反应可能是很简单呀，线程的变量副本，每个线程隔离。那这里有几个问题大家可以思考一下： ThreadLocal的 key 是弱引用，那么在 ThreadLocal.get()的时候，发生GC...","head":[["meta",{"property":"og:url","content":"https://doc.ezfri.com/bakend/java/concurrent/threadlocal.html"}],["meta",{"property":"og:site_name","content":"轻松星期五"}],["meta",{"property":"og:title","content":"万字解析 ThreadLocal 关键字"}],["meta",{"property":"og:description","content":"前言 全文共 10000+字，31 张图，这篇文章同样耗费了不少的时间和精力才创作完成，原创不易，请大家点点关注+在看，感谢。 对于ThreadLocal，大家的第一反应可能是很简单呀，线程的变量副本，每个线程隔离。那这里有几个问题大家可以思考一下： ThreadLocal的 key 是弱引用，那么在 ThreadLocal.get()的时候，发生GC..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://doc.ezfri.com/"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-04-03T02:05:22.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:alt","content":"万字解析 ThreadLocal 关键字"}],["meta",{"property":"article:author","content":"轻松星期五"}],["meta",{"property":"article:tag","content":"Java并发"}],["meta",{"property":"article:modified_time","content":"2023-04-03T02:05:22.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"万字解析 ThreadLocal 关键字\\",\\"image\\":[\\"https://doc.ezfri.com/\\"],\\"dateModified\\":\\"2023-04-03T02:05:22.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"轻松星期五\\",\\"url\\":\\"https://doc.ezfri.com\\"}]}"]]},"headers":[{"level":3,"title":"前言","slug":"前言","link":"#前言","children":[]},{"level":3,"title":"目录","slug":"目录","link":"#目录","children":[]},{"level":3,"title":"ThreadLocal代码演示","slug":"threadlocal代码演示","link":"#threadlocal代码演示","children":[]},{"level":3,"title":"ThreadLocal的数据结构","slug":"threadlocal的数据结构","link":"#threadlocal的数据结构","children":[]},{"level":3,"title":"GC 之后 key 是否为 null？","slug":"gc-之后-key-是否为-null","link":"#gc-之后-key-是否为-null","children":[]},{"level":3,"title":"ThreadLocal.set()方法源码详解","slug":"threadlocal-set-方法源码详解","link":"#threadlocal-set-方法源码详解","children":[]},{"level":3,"title":"ThreadLocalMap Hash 算法","slug":"threadlocalmap-hash-算法","link":"#threadlocalmap-hash-算法","children":[]},{"level":3,"title":"ThreadLocalMap Hash 冲突","slug":"threadlocalmap-hash-冲突","link":"#threadlocalmap-hash-冲突","children":[]},{"level":3,"title":"ThreadLocalMap.set()详解","slug":"threadlocalmap-set-详解","link":"#threadlocalmap-set-详解","children":[]},{"level":3,"title":"ThreadLocalMap过期 key 的探测式清理流程","slug":"threadlocalmap过期-key-的探测式清理流程","link":"#threadlocalmap过期-key-的探测式清理流程","children":[]},{"level":3,"title":"ThreadLocalMap扩容机制","slug":"threadlocalmap扩容机制","link":"#threadlocalmap扩容机制","children":[]},{"level":3,"title":"ThreadLocalMap.get()详解","slug":"threadlocalmap-get-详解","link":"#threadlocalmap-get-详解","children":[]},{"level":3,"title":"ThreadLocalMap过期 key 的启发式清理流程","slug":"threadlocalmap过期-key-的启发式清理流程","link":"#threadlocalmap过期-key-的启发式清理流程","children":[]},{"level":3,"title":"InheritableThreadLocal","slug":"inheritablethreadlocal","link":"#inheritablethreadlocal","children":[]},{"level":3,"title":"ThreadLocal项目中使用实战","slug":"threadlocal项目中使用实战","link":"#threadlocal项目中使用实战","children":[]}],"git":{"createdTime":1680487522000,"updatedTime":1680487522000,"contributors":[{"name":"chun.zheng","email":"zcilive@gmail.com","commits":1}]},"readingTime":{"minutes":23.57,"words":7072},"filePathRelative":"bakend/java/concurrent/threadlocal.md","localizedDate":"2023年4月3日","autoDesc":true,"excerpt":""}');export{e as data};
